version: '3.8'
services:
  rabbitmq:
    image: rabbitmq:3-management
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 30s
      retries: 30
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - app-network

  app:
    # image: 사전 빌드한 이미지 혹은 허브 이미지
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/api/v1')"]
      interval: 10s
      timeout: 30s
      retries: 30
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      mysql:
        condition: service_healthy
    command: >
      /bin/bash -c "/code/app/app_init.sh"
    volumes:
      - ./volume/alembic_migrations/:/code/app/alembic_migrations
      - ./volume/database/:/code/app/volume/database/
      - ./volume/ai_model_store/:/code/app/volume/ai_model_store/
      - ./volume/staticfile/:/code/app/volume/staticfile/
      - ./volume/log/app/:/code/app/volume/log/
    networks:
      - app-network

  celery:
    # image: 사전 빌드한 이미지 혹은 허브 이미지
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      mysql:
        condition: service_healthy
      app:
        condition: service_healthy
    command: /bin/bash -c "celery -A celery_app worker -l info --pool=solo"
    volumes:
      - ./volume/database/:/code/app/volume/database/
      - ./volume/ai_model_store/:/code/app/volume/ai_model_store/
      - ./volume/staticfile/:/code/app/volume/staticfile/
    networks:
      - app-network

  celery_beat:
    # image: 사전 빌드한 이미지 혹은 허브 이미지
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      mysql:
        condition: service_healthy
      app:
        condition: service_healthy
      celery:
        condition: service_started
    command: /bin/bash -c "celery -A celery_app beat --loglevel=info"
    volumes:
      - ./volume/database/:/code/app/volume/database/
      - ./volume/ai_model_store/:/code/app/volume/ai_model_store/
      - ./volume/staticfile/:/code/app/volume/staticfile/
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 30s
      retries: 30
    environment:
      - MYSQL_ROOT_PASSWORD=${RDBMS_ROOT_PASSWORD}
      - MYSQL_DATABASE=${RDBMS_DB_NAME}
      - MYSQL_USER=${RDBMS_USERNAME}
      - MYSQL_PASSWORD=${RDBMS_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./volume/database:/var/lib/mysql
    networks:
      - app-network

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
    depends_on:
      - app
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./volume/log/nginx/:/var/log/nginx/
    networks:
      - app-network

  redis:
    image: redis:latest
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 30
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "6379:6379"
    volumes:
      - ./volume/redis:/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge